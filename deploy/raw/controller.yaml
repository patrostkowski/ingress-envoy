apiVersion: v1
kind: Namespace
metadata:
  name: ingress-envoy

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ingress-envoy-controller
  namespace: ingress-envoy

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ingress-envoy-controller
rules:
  - apiGroups: [""]
    resources: ["services", "endpoints", "pods"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingresses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "create", "update"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ingress-envoy-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-envoy-controller
subjects:
  - kind: ServiceAccount
    name: ingress-envoy-controller
    namespace: ingress-envoy

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ingress-envoy-controller
  namespace: ingress-envoy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ingress-envoy-controller
  template:
    metadata:
      labels:
        app: ingress-envoy-controller
    spec:
      serviceAccountName: ingress-envoy-controller
      containers:
        - name: controller
          image: patrostkowski/ingress-envoy:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
              name: http
            - containerPort: 18000
              name: grpc
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 20

---
apiVersion: v1
kind: Service
metadata:
  name: ingress-envoy-controller
  namespace: ingress-envoy
spec:
  selector:
    app: ingress-envoy-controller
  ports:
    - name: http
      port: 8080
      targetPort: 8080
    - name: grpc
      port: 18000
      targetPort: 18000

---
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: ingress-envoy
spec:
  controller: patrostkowski.dev/ingress-envoy-controller